Program ::= <STATEMENT_LINE>
<STATEMENT_LINE> ::= <STATEMENT> <ALTER_STATEMENT_LINE>
<ALTER_STATEMENT_LINE> ::= <STATEMENT> <ALTER_STATEMENT_LINE>
<ALTER_STATEMENT_LINE> ::= NONE
<STATEMENT> ::= int  <ID>  <STATEMENT_TYPE>
<STATEMENT> ::= void  <ID>  <FUNCTION_STATE>
<STATEMENT_TYPE> ::= <VARIABLE_STATE>
<STATEMENT_TYPE> ::= <FUNCTION_STATE>
<VARIABLE_STATE> ::= ;
<FUNCTION_STATE> ::= ( <FORMAL_PARAMETER> ) <STATE_BLOCK>
<FORMAL_PARAMETER> ::= void
<FORMAL_PARAMETER> ::= <PARAMETER_LIST>
<FORMAL_PARAMETER> ::= NONE
<PARAMETER_LIST> ::= <PARAMETER> <ALTER_PARAMETER_LIST>
<ALTER_PARAMETER_LIST> ::= , <PARAMETER> <ALTER_PARAMETER_LIST>
<ALTER_PARAMETER_LIST> ::= NONE
<PARAMETER> ::= int  <ID>
<STATE_BLOCK> ::= { <INNER_STATEMENT>  <STATE_LINE> }
<INNER_STATEMENT> ::= <INNER_VARIABLE_STATEMENT> <ALTER_INNER_STATEMENT>
<INNER_STATEMENT> ::= NONE 
<ALTER_INNER_STATEMENT> ::=  <INNER_VARIABLE_STATEMENT> <ALTER_INNER_STATEMENT>
<ALTER_INNER_STATEMENT> ::= NONE
<INNER_VARIABLE_STATEMENT> ::= int  <ID> ;
<STATE_LINE> ::= <STATE> <ALTER_STATE_LINE>
<ALTER_STATE_LINE> ::= <STATE> <ALTER_STATE_LINE>
<ALTER_STATE_LINE> ::= NONE
<STATE> ::= <if_STATE>
<STATE> ::= <while_STATE>
<STATE> ::= <return_STATE>
<STATE> ::= <ASSIGNMENT>
<ASSIGNMENT> ::= <ID> = <EXPRESSION> ;
<return_STATE> ::= return <EXPRESSION> ;
<EXPRESSION> ::= NONE
<while_STATE> ::= while ( <EXPRESSION> ) <STATE_BLOCK>
<if_STATE> ::= if ( <EXPRESSION> ) <STATE_BLOCK> <ALTER_ELSE_BLOCK>
<ALTER_ELSE_BLOCK> ::= else <STATE_BLOCK>
<ALTER_ELSE_BLOCK> ::= NONE
<EXPRESSION> ::= <PLUS_EXPRESSION> <ALTER_EXPRESSION>
<ALTER_EXPRESSION> ::= <relop> <PLUS_EXPRESSION> <ALTER_EXPRESSION>
<ALTER_EXPRESSION> ::= NONE
<relop> ::= <
<relop> ::= <=
<relop> ::= >
<relop> ::= >=
<relop> ::= ==
<relop> ::= !=
<PLUS_EXPRESSION> ::= <TERM> <ALTER_PLUS_EXPRESSION>
<ALTER_PLUS_EXPRESSION> ::= + <TERM> <ALTER_PLUS_EXPRESSION>
<ALTER_PLUS_EXPRESSION> ::= - <TERM> <ALTER_PLUS_EXPRESSION>
<ALTER_PLUS_EXPRESSION> ::= NONE
<TERM> ::= <FACTOR> <ALTER_TERM>
<ALTER_TERM> ::= * <FACTOR> <ALTER_TERM>
<ALTER_TERM> ::= / <FACTOR> <ALTER_TERM>
<ALTER_TERM> ::= NONE
<FACTOR> ::= num
<FACTOR> ::= ( <EXPRESSION> )
<FACTOR> ::= <ID>  FTYPE
FTYPE ::= <call>
FTYPE ::= NONE
<call> ::= ( <ACTUAL_PARAMETER> )
<ACTUAL_PARAMETER> ::= <ACTUAL_PARAMETER_LIST>
<ACTUAL_PARAMETER> ::= NONE
<ACTUAL_PARAMETER_LIST> ::= <EXPRESSION> <ALTER_ACTUAL_PARAMETER_LIST>
<ALTER_ACTUAL_PARAMETER_LIST> ::= , <EXPRESSION> <ALTER_ACTUAL_PARAMETER_LIST>
<ALTER_ACTUAL_PARAMETER_LIST> ::= NONE
